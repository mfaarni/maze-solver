

def maze_gen(input):
    maze_8x8 = [
        "#G######0",
        "# #    #1",
        "# # ####2",
        "# #    #3",
        "# # ## #4",
        "# # #  #5",
        "#   # ##6",
        "#####S##7",
        "01234567-"
    ]

    maze_22x22 = [
        "##G###################0",
        "#              #     #1",
        "#### ####### ### #####2",
        "# #     #        #   #3",
        "# # ##  #  ####  # # #4",
        "#    #  #  #  #  # # #5",
        "#### #  ####  #### # #6",
        "#  # #           # # #7",
        "# ########## ####### #8",
        "#            #       #9",
        "# ####### ## ## #### #0",
        "# #     # ##    #    #1",
        "# # ##### ########## #2",
        "# #         #        #3",
        "### ##################4",
        "#          # #   #   #5",
        "# # # ###### # # # # #6",
        "# # ###      # # # # #7",
        "# #   # #### # # # # #8",
        "# ###      # # # # # #9",
        "#   # #### #   #   # #0",
        "####################S#1",
        "01234567890123456789012"
    ]

    maze_32x32 = [
        "###########G####################-0",
        "####### # #         ### # #### #-1",
        "#           # # # #       ##   #-2",
        "# # # # ##### # # ### # ###  # #-3",
        "# # # # # #   # # #   #     ## #-4",
        "### # # # # # ##### ##### # ## #-5",
        "# # # #   # #     # #     # ## #-6",
        "# # ######### # ### # # ### ## #-7",
        "#     #   # # #     # # # # ## #-8",
        "######### # ####### # ### #### #-9",
        "#     #       # #   #   #      #10",
        "##### # # ### # ### ##### # ## #11",
        "#   #   # #       #   #   #    #12",
        "# ##### ### # ### ### ##### # ##13",
        "#   #   #   #   #     #     #  #14",
        "# # ##### ####### # ########## #15",
        "# #       #   # # #            #16",
        "######### # ### ##### # ###### #17",
        "#     #   #   # #   # # # #    #18",
        "# ### ##### ### ### # ### # ## #19",
        "#   # #         #         # ## #20",
        "# # ##### ### ### # ####### ## #21",
        "# # #       #   # # # #     ## #22",
        "# ##### ##### # ### # # # ######23",
        "#   #   #   # #     # # # #    #24",
        "# ### # # ### # ### # ######## #25",
        "#   # #   # # #   #     #   ## #26",
        "# ### ##### # ########### # ## #27",
        "#         # # #           #    #28",
        "# # ### # # # ### # ##### #### #29",
        "# #   # # #       #   #     #  #30",
        "#############################S##31",
        "01234567890123456789012345678901.."
    ]

    maze_80x80 = [
"#G###############################################################################",
"#   # #     #       #         #       #       # #       #           # #         #",
"# # # ### ### # # ### ### # ### ##### ### ##### ####### ####### # # # ### # #####",
"# #   #       # #     #   #   # #   #                     #     # #   #   #     #",
"# ### # ##### ### # ##### ####### ### # ####### ##### # ### # ####### ####### # #",
"#   #     #   #   #     #   # #   # # # # #   # # #   # #   #   #   #     #   # #",
"### ### # ### # ########### # # # # ### # ### ### ### # # # # # # # ####### ### #",
"#   # # #   # #   #       #     #       #     #   #   #   # # #   #     #   # # #",
"##### ##### # # ####### ### ####### # # # ### ### # # ######### ### # ##### # ###",
"#   # #     # # #         # #   #   # #   # #   #   # #   # #   #   # #   #   # #",
"# ### ### ##### # # ##### ### ##### ####### ####### ### # # ##### ####### # # # #",
"#   # #   # # # # # #     #     #         # #     # #   #             #     #   #",
"# ### ##### # ### ### ####### ##### # ##### ### ### ### ######### # ##### ##### #",
"# #   # #   #   #   # #       #   # # # #     #     # #   #   #   # #   # #     #",
"# # ### # ### ##### ### ### ##### ### # # ##### ### # ####### ### # ### ##### # #",
"#         #       # #   #     # #   #       #   # # # #     # # # #           # #",
"# # ##### ##### ### ### ####### # ##### # ### ### # # # ### # # ### ### # # #####",
"# #     #     #     # #   #   #         #   #   # #   #   #     #     # # # #   #",
"### # ##### ### ##### # ##### ##### ### ######### # ######### ##### ### ####### #",
"# # #     #       # #   # # #     # # # # #   #         #           #     # #   #",
"# ##### # ######### ### # # # ### # # ### # ####### ####### ##### ##### ### ### #",
"# # #   #       #   #   #   # # #   #             #   #   # # #       #     #   #",
"# # # # ### ### # # # ##### ### ####### ### ##### ### # # ### # # ##### # ##### #",
"# #   # #   #   # #           # #         # #   # #     #   #   # #     # # #   #",
"# ### # ##### # ##### # ### ### ##### ##### # ##### ##### ##### ##### ### # ### #",
"#     #     # #   # # # #           # #         #       #   #     #     # # #   #",
"# ########### ##### ### ##### ##### # # ##### ############# ### ### # # ### ### #",
"# #   # #         #   # #   # #     # #   # #       #     # #     # # #         #",
"##### # # ####### ### # ### ####### ####### # ########### # ######### ### ##### #",
"#     # #     # # #   #       #     #   #     #     #         #       #     #   #",
"##### # # ##### ### ### ### ##### # # ### ### ### ##### ##### ##### # ### ##### #",
"#     #       #     #     # #     #   #   # #     #   #   #   # # # # # #   # # #",
"# ### ### ### # # ############# ##### ### # ####### # ##### ### # # ### ### # # #",
"# # #     #     #   #   #   #   #     # #           #     #     #         # # # #",
"### ##### ### # ### ### # ### # # ### # ### ####### ####### ### ### ### ##### # #",
"#   #     #   #   # #         # # # #         #     # #     #   #     # # # # # #",
"# # ### # ##### # ### ### ####### # ##### ##### ### # # # ######### ### # # # # #",
"# # #   #   # # #   #   #   #         #     #   # #     #   #     # # # #     # #",
"### ### ##### ### ####### ####### ### ##### ##### # ##### # ##### # # ####### # #",
"# # #   #         #             #   #   #   #   #   #   # #     # #   # # # #   #",
"# # # ### ########### ########### ### # ####### # # # # ### ### # # ### # # #####",
"#   # #   # # #       #       # # # # #   # # #   #   #   #   #   # #   #       #",
"# ##### ### # ############### # # # ##### # # ##### # ####### ######### # #######",
"# #         #     #         #         # #       # # # #     #     # #     # #   #",
"# # ############# # # ### ########### # ######### # # ##### ### ### # ##### # ###",
"#   #     #   #   # # #   # #   #     # #     #     # #         #             # #",
"# # # ##### # # # # # ##### # ##### ### ### ### ### # ### # ### # ######### # # #",
"# #     #   # # # # # #             # #       # #   #   # # # # # #     #   #   #",
"##### ### # ##### # ##### # # ####### # ### ##### ##### ##### ### ### ##### ### #",
"#         # #       #   # # # #     # # #       # #             # # #       #   #",
"##### # # ######### # ##### # ### # # ### ##### ##### ### ####### # # ######### #",
"#   # # # # #   # #       # # #   #     # #             # #       #   # # #     #",
"### # # # # ### # # # ### ######### # # # ### ### ### ##### # # ##### # # # ### #",
"#   # # #   # # #   # #   #         # #   #   #     #       # #   #   # #   #   #",
"# # ### # # # # ##### # # # ### ####### ######### # ######### ####### # #########",
"# #   # # #           # # #   # #   # # # #     # # #         #   #     #     # #",
"# ### # ### ####### # # ######### ### # # # ### ##### ### ### # ####### # ##### #",
"# #     # #       # # #     # #       #       #     #   # #   #   #         #   #",
"####### # # ####### # # # ### ####### # ### ### ### # ### # ### ### ##### # # # #",
"#         # #     # # # #   # #   #     # #   #   # # #   #     #   # # # #   # #",
"# ####### ### # ####### ##### # ####### # ##### ### ##### ####### ### # # # # # #",
"# #   #   # # #   # # #     #   #   # # #       # #   #   #   # #   #     # # # #",
"# # ### # # ##### # # ##### # # # ### # ######### ##### ##### # # ######### #####",
"# #     #     #       #     # #       #   # #     #           #   # # #     #   #",
"# ### ### ##### ### ### ### # ##### ##### # ### ##### # ### ##### # # ##### # ###",
"# # # # # # # # #   #   # #   #     # # #       #     # #   #   # #       # # # #",
"### ### # # # # # ##### # ##### ### # # ### # ##### ######### # # ### ##### # # #",
"# #           # #     #     # # #   #     # #     #   #     # # # # # #   # # # #",
"# ##### ### # ####### # ##### # # # # ##### # ##### # # # ### ##### # # ### # # #",
"# #       # # #             #   # #   #     # #   # # # #       # #       # #   #",
"# # ##### # ### # ####### # ### ### # # ### ##### ##### ### ##### ####### # # ###",
"#   # # # # #   # # #   # #   #   # #     # # #       # #   # #     # # # #     #",
"# ### # # ##### ### # ### # # ########### ### ### # ### ##### ##### # # # # # ###",
"#   #     #             # # #   #     #         # #     # #   #   #         #   #",
"# # # ##### # ######### ##### ### ### # ### ######### # # ### ### # ######### # #",
"# # # # # # #   #         #     #   # #   #           #   #       # #       # # #",
"##### # # ##### ########### ##### # ### ### ### ### # # # ##### ### ##### # ### #",
"# #     #       #   #       #   # #       #   #   # # # #   # #   # #     # #   #",
"# # ##### ### # # ### ### # # ##### ####### ### ##### ### ### # ### ##### # # ###",
"#       #   # #   #     # #       #   #     #       #   #       #       # #     #",
"###############################################################################S#"
    ]
    maze_trem = [
        "#S#########################",
        "#                         #",
        "# ########### ########### #",
        "# ########### ########### #",
        "#                         #",
        "# ### ############ ###### #",
        "# ### ############ ###### #",
        "# ###              ###### #",
        "# ### ############ ###### #",
        "#         #######         #",
        "# #######         ####### #",
        "#         #######         #",
        "#########################G#",
    ]

    if input == 0:
        return maze_8x8
    elif input == 1:
        return maze_22x22
    elif input == 2:
        return maze_32x32
    elif input == 3:
        return maze_80x80
    elif input == "t":
        return maze_trem
    else:
        return None
